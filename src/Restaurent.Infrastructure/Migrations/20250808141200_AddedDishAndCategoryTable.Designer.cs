// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurent.Infrastructure.DBContext;

#nullable disable

namespace Restaurent.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250808141200_AddedDishAndCategoryTable")]
    partial class AddedDishAndCategoryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restaurent.Core.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("582e8288-4fcb-4c98-98cd-b0fbefe29552"),
                            CategoryName = "Pizza",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("4de3cf15-47aa-4fa3-8ecc-265d0a0d04ff"),
                            CategoryName = "Beverages",
                            Status = true
                        });
                });

            modelBuilder.Entity("Restaurent.Core.Domain.Entities.Dish", b =>
                {
                    b.Property<Guid>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Image_Path")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DishId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Dishes", (string)null);

                    b.HasData(
                        new
                        {
                            DishId = new Guid("34adc259-fc50-4519-bd52-190ce9cfe61e"),
                            CategoryId = new Guid("4de3cf15-47aa-4fa3-8ecc-265d0a0d04ff"),
                            Description = "Cold coffee is a coffee beverage served cold",
                            DishName = "Cold Coffee",
                            Image_Path = "/Images/cold-coffee.jpg",
                            Price = 120m
                        },
                        new
                        {
                            DishId = new Guid("f649bdc4-7e9c-4026-a7af-91bdd7db7df2"),
                            CategoryId = new Guid("4de3cf15-47aa-4fa3-8ecc-265d0a0d04ff"),
                            Description = "A rich and creamy Oreo shake, blended to perfection with real Oreo cookies and vanilla ice cream for a delightful and indulgent treat",
                            DishName = "Oreo Shake",
                            Image_Path = "/Images/oreo-shake.jpg",
                            Price = 249m
                        },
                        new
                        {
                            DishId = new Guid("0af2f6d6-a3bd-4b68-9193-1078f696e888"),
                            CategoryId = new Guid("582e8288-4fcb-4c98-98cd-b0fbefe29552"),
                            Description = "a sweet and savory combination of golden corn kernels and melted cheese, often with a flavorful sauce and a perfectly baked crust.",
                            DishName = "Corn Pizza",
                            Image_Path = "/Images/corn-pizza.jpg",
                            Price = 110m
                        },
                        new
                        {
                            DishId = new Guid("8d64dfb9-1ee5-4e32-97de-6c1edf8506dc"),
                            CategoryId = new Guid("582e8288-4fcb-4c98-98cd-b0fbefe29552"),
                            Description = "a classic dish featuring a baked dough base topped with tomato sauce and a generous layer of melted cheese, typically mozzarella, and sometimes other cheeses like parmesan or provolone.",
                            DishName = "Cheese Pizza",
                            Image_Path = "/Images/cheese-pizza.jpg",
                            Price = 150m
                        });
                });

            modelBuilder.Entity("Restaurent.Core.Domain.Entities.Dish", b =>
                {
                    b.HasOne("Restaurent.Core.Domain.Entities.Category", "Category")
                        .WithMany("Dishes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Restaurent.Core.Domain.Entities.Category", b =>
                {
                    b.Navigation("Dishes");
                });
#pragma warning restore 612, 618
        }
    }
}
